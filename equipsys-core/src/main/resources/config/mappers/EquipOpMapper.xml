<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- equip_op表:设备基础信息表模块 -->
<mapper namespace="com.stone.equipsys.core.mapper.EquipOpMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.stone.equipsys.core.domain.EquipOp">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="equip_id" property="equipId" jdbcType="INTEGER" />
        <result column="op_id" property="opId" jdbcType="INTEGER" />
    </resultMap>
    
    <resultMap id="BaseExtResultMap" type="com.stone.equipsys.core.model.EquipOpModel">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="equip_id" property="equipId" jdbcType="INTEGER" />
        <result column="op_id" property="opId" jdbcType="INTEGER" />
        <result column="op_name" property="opname" jdbcType="VARCHAR" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,equip_id,op_id 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=INTEGER}
            </if>
            <if test="equipId != null and equipId != '' ">
                and equip_id = #{equipId,jdbcType=INTEGER}
            </if>
            <if test="opId != null and opId != '' ">
                and op_id = #{opId,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.stone.equipsys.core.domain.EquipOp">
        insert into equip_op(equip_id,op_id)values(#{equipId,jdbcType=INTEGER},#{opId,jdbcType=INTEGER})
    </insert>

    
    <update id="update" parameterType="com.stone.equipsys.core.domain.EquipOp">
        update equip_op set 
            equip_id = #{equipId,jdbcType=INTEGER},
            op_id = #{opId,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update equip_op
          <set>
            <if test="equipId != null and equipId != '' ">        
                equip_id = #{equipId,jdbcType=INTEGER},                
            </if>
            <if test="opId != null and opId != '' ">        
                op_id = #{opId,jdbcType=INTEGER}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from equip_op
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from equip_op
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from equip_op
        <include refid="searchBy"/>
    </select>
    
    <delete id="deleteOpByEquipId" parameterType="Integer">
    	delete 
    	from equip_op
		WHERE 
		equip_id = #{equipId};
    </delete>
    
    <select id="getOpByEquipid" resultMap="BaseExtResultMap" parameterType="Integer">
    	select
			op.id as id,
			op.equip_id as equip_id,
			op.op_id as op_id,
			emp.emp_name as op_name
		from
			equip_op as op
			left Join employee_info as emp ON op.op_id = emp.id
		where op.equip_id=#{equipId};
    </select>
    
    <select id="countByEquipid" parameterType="java.lang.Long" resultType="java.lang.Integer">
    	select	count(id)
        from equip_op
        where equip_id = #{equipId}
    </select>
</mapper>
