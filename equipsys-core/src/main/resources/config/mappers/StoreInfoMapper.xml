<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- store_info表:库存物料类型表模块 -->
<mapper namespace="com.stone.equipsys.core.mapper.StoreInfoMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.stone.equipsys.core.domain.StoreInfo">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="stroe_name" property="stroeName" jdbcType="VARCHAR" />
        <result column="parent_id" property="parentId" jdbcType="BIGINT" />
        <result column="store_order" property="storeOrder" jdbcType="INTEGER" />
        <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,stroe_name,parent_id,store_order,remarks 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="stroeName != null and stroeName != '' ">
                and stroe_name = #{stroeName,jdbcType=VARCHAR}
            </if>
            <if test="parentId != null and parentId != '' ">
                and parent_id = #{parentId,jdbcType=BIGINT}
            </if>
            <if test="storeOrder != null and storeOrder != '' ">
                and store_order = #{storeOrder,jdbcType=INTEGER}
            </if>
            <if test="remarks != null and remarks != '' ">
                and remarks = #{remarks,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.stone.equipsys.core.domain.StoreInfo">
        insert into store_info(stroe_name,parent_id,store_order,remarks)values(#{stroeName,jdbcType=VARCHAR},#{parentId,jdbcType=BIGINT},#{storeOrder,jdbcType=INTEGER},#{remarks,jdbcType=VARCHAR})
    </insert>

    
    <update id="update" parameterType="com.stone.equipsys.core.domain.StoreInfo">
        update store_info set 
            stroe_name = #{stroeName,jdbcType=VARCHAR},
            parent_id = #{parentId,jdbcType=BIGINT},
            store_order = #{storeOrder,jdbcType=INTEGER},
            remarks = #{remarks,jdbcType=VARCHAR}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update store_info
          <set>
            <if test="stroeName != null and stroeName != '' ">        
                stroe_name = #{stroeName,jdbcType=VARCHAR},                
            </if>
            <if test="parentId != null and parentId != '' ">        
                parent_id = #{parentId,jdbcType=BIGINT},                
            </if>
            <if test="storeOrder != null and storeOrder != '' ">        
                store_order = #{storeOrder,jdbcType=INTEGER},                
            </if>
            <if test="remarks != null and remarks != '' ">        
                remarks = #{remarks,jdbcType=VARCHAR}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from store_info
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from store_info
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from store_info
        <include refid="searchBy"/>
        order by store_order
    </select>
    
    <delete id="delete" parameterType="java.lang.Long">
    	delete 
    	from store_info
    	where id = #{id,jdbcType=INTEGER}
    </delete>
</mapper>
