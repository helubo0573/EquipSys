<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- equip_servicing_implement表:设备维修信息管理表模块 -->
<mapper namespace="com.stone.equipsys.core.mapper.EquipServicingImplementMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.stone.equipsys.core.domain.EquipServicingImplement">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="application_id" property="applicationId" jdbcType="BIGINT" />
        <result column="servicing_dept" property="servicingDept" jdbcType="INTEGER" />
        <result column="servicing_time_start" property="servicingTimeStart" jdbcType="TIMESTAMP" />
        <result column="servicing_time_end" property="servicingTimeEnd" jdbcType="TIMESTAMP" />
        <result column="failure_bewrite" property="failureBewrite" jdbcType="VARCHAR" />
        <result column="failure_cause" property="failureCause" jdbcType="VARCHAR" />
        <result column="servicing_cause" property="servicingCause" jdbcType="VARCHAR" />
        <result column="servicing_status" property="servicingStatus" jdbcType="INTEGER" />
        <result column="serviceman_confirm" property="servicemanConfirm" jdbcType="INTEGER" />
        <result column="equip_op_confirm" property="equipOpConfirm" jdbcType="INTEGER" />
        <result column="department_manager_confirm" property="departmentManagerConfirm" jdbcType="INTEGER" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,application_id,servicing_dept,servicing_time_start,servicing_time_end,failure_bewrite,failure_cause,servicing_cause,servicing_status,serviceman_confirm,equip_op_confirm,department_manager_confirm 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="applicationId != null and applicationId != '' ">
                and application_id = #{applicationId,jdbcType=BIGINT}
            </if>
            <if test="servicingDept != null and servicingDept != '' ">
                and servicing_dept = #{servicingDept,jdbcType=INTEGER}
            </if>
            <if test="servicingTimeStart != null">
                and servicing_time_start = #{servicingTimeStart,jdbcType=TIMESTAMP}
            </if>
            <if test="servicingTimeEnd != null">
                and servicing_time_end = #{servicingTimeEnd,jdbcType=TIMESTAMP}
            </if>
            <if test="failureBewrite != null and failureBewrite != '' ">
                and failure_bewrite = #{failureBewrite,jdbcType=VARCHAR}
            </if>
            <if test="failureCause != null and failureCause != '' ">
                and failure_cause = #{failureCause,jdbcType=VARCHAR}
            </if>
            <if test="servicingCause != null and servicingCause != '' ">
                and servicing_cause = #{servicingCause,jdbcType=VARCHAR}
            </if>
            <if test="servicingStatus != null and servicingStatus != '' ">
                and servicing_status = #{servicingStatus,jdbcType=INTEGER}
            </if>
            <if test="servicemanConfirm != null and servicemanConfirm != '' ">
                and serviceman_confirm = #{servicemanConfirm,jdbcType=INTEGER}
            </if>
            <if test="equipOpConfirm != null and equipOpConfirm != '' ">
                and equip_op_confirm = #{equipOpConfirm,jdbcType=INTEGER}
            </if>
            <if test="departmentManagerConfirm != null and departmentManagerConfirm != '' ">
                and department_manager_confirm = #{departmentManagerConfirm,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.stone.equipsys.core.domain.EquipServicingImplement">
        insert into equip_servicing_implement(application_id,servicing_dept,servicing_time_start,servicing_time_end,failure_bewrite,failure_cause,servicing_cause,servicing_status,serviceman_confirm,equip_op_confirm,department_manager_confirm)values(#{applicationId,jdbcType=BIGINT},#{servicingDept,jdbcType=INTEGER},#{servicingTimeStart,jdbcType=TIMESTAMP},#{servicingTimeEnd,jdbcType=TIMESTAMP},#{failureBewrite,jdbcType=VARCHAR},#{failureCause,jdbcType=VARCHAR},#{servicingCause,jdbcType=VARCHAR},#{servicingStatus,jdbcType=INTEGER},#{servicemanConfirm,jdbcType=INTEGER},#{equipOpConfirm,jdbcType=INTEGER},#{departmentManagerConfirm,jdbcType=INTEGER})
    </insert>

    
    <update id="update" parameterType="com.stone.equipsys.core.domain.EquipServicingImplement">
        update equip_servicing_implement set 
            application_id = #{applicationId,jdbcType=BIGINT},
            servicing_dept = #{servicingDept,jdbcType=INTEGER},
            servicing_time_start = #{servicingTimeStart,jdbcType=TIMESTAMP},
            servicing_time_end = #{servicingTimeEnd,jdbcType=TIMESTAMP},
            failure_bewrite = #{failureBewrite,jdbcType=VARCHAR},
            failure_cause = #{failureCause,jdbcType=VARCHAR},
            servicing_cause = #{servicingCause,jdbcType=VARCHAR},
            servicing_status = #{servicingStatus,jdbcType=INTEGER},
            serviceman_confirm = #{servicemanConfirm,jdbcType=INTEGER},
            equip_op_confirm = #{equipOpConfirm,jdbcType=INTEGER},
            department_manager_confirm = #{departmentManagerConfirm,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update equip_servicing_implement
          <set>
            <if test="applicationId != null and applicationId != '' ">        
                application_id = #{applicationId,jdbcType=BIGINT},                
            </if>
            <if test="servicingDept != null and servicingDept != '' ">        
                servicing_dept = #{servicingDept,jdbcType=INTEGER},                
            </if>
            <if test="servicingTimeStart != null">
                servicing_time_start = #{servicingTimeStart,jdbcType=TIMESTAMP},                
            </if>
            <if test="servicingTimeEnd != null">
                servicing_time_end = #{servicingTimeEnd,jdbcType=TIMESTAMP},                
            </if>
            <if test="failureBewrite != null and failureBewrite != '' ">        
                failure_bewrite = #{failureBewrite,jdbcType=VARCHAR},                
            </if>
            <if test="failureCause != null and failureCause != '' ">        
                failure_cause = #{failureCause,jdbcType=VARCHAR},                
            </if>
            <if test="servicingCause != null and servicingCause != '' ">        
                servicing_cause = #{servicingCause,jdbcType=VARCHAR},                
            </if>
            <if test="servicingStatus != null and servicingStatus != '' ">        
                servicing_status = #{servicingStatus,jdbcType=INTEGER},                
            </if>
            <if test="servicemanConfirm != null and servicemanConfirm != '' ">        
                serviceman_confirm = #{servicemanConfirm,jdbcType=INTEGER},                
            </if>
            <if test="equipOpConfirm != null and equipOpConfirm != '' ">        
                equip_op_confirm = #{equipOpConfirm,jdbcType=INTEGER},                
            </if>
            <if test="departmentManagerConfirm != null and departmentManagerConfirm != '' ">        
                department_manager_confirm = #{departmentManagerConfirm,jdbcType=INTEGER}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from equip_servicing_implement
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from equip_servicing_implement
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from equip_servicing_implement
        <include refid="searchBy"/>
    </select>
    
</mapper>
