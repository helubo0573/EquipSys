<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- org_dept表:设备基础信息表模块 -->
<mapper namespace="com.stone.equipsys.core.mapper.OrgDeptMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.stone.equipsys.core.domain.OrgDept">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
        <result column="parent_id" property="parentId" jdbcType="INTEGER" />
        <result column="dept_type" property="deptType" jdbcType="INTEGER" />
        <result column="dept_remarks" property="deptRemarks" jdbcType="VARCHAR" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,dept_name,parent_id,dept_type,dept_remarks 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=INTEGER}
            </if>
            <if test="deptName != null and deptName != '' ">
                and dept_name = #{deptName,jdbcType=VARCHAR}
            </if>
            <if test="parentId != null and parentId != '' ">
                and parent_id = #{parentId,jdbcType=INTEGER}
            </if>
            <if test="deptType != null and deptType != '' ">
                and dept_type = #{deptType,jdbcType=INTEGER}
            </if>
            <if test="deptRemarks != null and deptRemarks != '' ">
                and dept_remarks = #{deptRemarks,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.stone.equipsys.core.domain.OrgDept">
        insert into org_dept(dept_name,parent_id,dept_type,dept_remarks)values(#{deptName,jdbcType=VARCHAR},#{parentId,jdbcType=INTEGER},#{deptType,jdbcType=INTEGER},#{deptRemarks,jdbcType=VARCHAR})
    </insert>

    
    <update id="update" parameterType="com.stone.equipsys.core.domain.OrgDept">
        update org_dept set 
            dept_name = #{deptName,jdbcType=VARCHAR},
            parent_id = #{parentId,jdbcType=INTEGER},
            dept_type = #{deptType,jdbcType=INTEGER},
            dept_remarks = #{deptRemarks,jdbcType=VARCHAR}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update org_dept
          <set>
            <if test="deptName != null and deptName != '' ">        
                dept_name = #{deptName,jdbcType=VARCHAR},                
            </if>
            <if test="parentId != null and parentId != '' ">        
                parent_id = #{parentId,jdbcType=INTEGER},                
            </if>
            <if test="deptType != null and deptType != '' ">        
                dept_type = #{deptType,jdbcType=INTEGER},                
            </if>
            <if test="deptRemarks != null and deptRemarks != '' ">        
                dept_remarks = #{deptRemarks,jdbcType=VARCHAR}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from org_dept
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from org_dept
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from org_dept
        <include refid="searchBy"/>
    </select>
    
    <select id="findByDept" resultMap="BaseResultMap">
    	select
        	<include refid="Base_Column_List" />
        from org_dept
        where dept_type=0
    </select>
    
    <delete id="deleteById" parameterType="java.lang.Long">
    	delete 
    	from org_dept
    	where id = #{id,jdbcType=INTEGER}
    </delete>
    
        <select id="findByParentDept" resultMap="BaseResultMap">
    	select
        	<include refid="Base_Column_List" />
        from org_dept
        where parent_id=0
    </select>
</mapper>
