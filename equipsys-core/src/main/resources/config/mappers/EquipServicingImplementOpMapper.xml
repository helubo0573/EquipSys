<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- equip_servicing_implement_op表:设备维修人员记录表模块 -->
<mapper namespace="com.stone.equipsys.core.mapper.EquipServicingImplementOpMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.stone.equipsys.core.domain.EquipServicingImplementOp">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="implement_id" property="implementId" jdbcType="BIGINT" />
        <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
        <result column="charge_person" property="chargePerson" jdbcType="INTEGER" />
    </resultMap>
    
    <resultMap id="BaseExtResultMap" type="com.stone.equipsys.core.model.EquipServicingImplementOpModel">
        <result column="op_id" property="opId" jdbcType="INTEGER" />
        <result column="op_name" property="opname" jdbcType="VARCHAR" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,implement_id,employee_id,charge_person 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="implementId != null and implementId != '' ">
                and implement_id = #{implementId,jdbcType=BIGINT}
            </if>
            <if test="employeeId != null and employeeId != '' ">
                and employee_id = #{employeeId,jdbcType=INTEGER}
            </if>
            <if test="charge_person != null and chargePerson != '' ">
                and charge_person = #{chargePerson,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.stone.equipsys.core.domain.EquipServicingImplementOp">
        insert into equip_servicing_implement_op(implement_id,employee_id,charge_person)values(#{implementId,jdbcType=BIGINT},#{employeeId,jdbcType=INTEGER},#{chargePerson,jdbcType=INTEGER})
    </insert>

    
    <update id="update" parameterType="com.stone.equipsys.core.domain.EquipServicingImplementOp">
        update equip_servicing_implement_op set 
            implement_id = #{implementId,jdbcType=BIGINT},
            employee_id = #{employeeId,jdbcType=INTEGER},
            charge_person = #{chargePerson,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update equip_servicing_implement_op
          <set>
            <if test="implementId != null and implementId != '' ">        
                implement_id = #{implementId,jdbcType=BIGINT},                
            </if>
            <if test="employeeId != null and employeeId != '' ">        
                employee_id = #{employeeId,jdbcType=INTEGER},                
            </if>
            <if test="charge_person != null and charge_person != '' ">        
                charge_person = #{chargePerson,jdbcType=INTEGER}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from equip_servicing_implement_op
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from equip_servicing_implement_op
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from equip_servicing_implement_op
        <include refid="searchBy"/>
    </select>
    
        <select id="getOpByImplementid" resultMap="BaseExtResultMap" parameterType="java.lang.Long">
    	select
			op.id as id,
			op.employee_id as op_id,
			emp.emp_name as op_name
		from
			equip_servicing_implement_op as op
			left Join employee_info as emp ON op.employee_id = emp.id
		where op.implement_id=#{implementId}
		order by charge_person desc
    </select>
    
    <delete id="deleteOpByImplementId"  parameterType="java.lang.Long">
    	delete 
    	from equip_servicing_implement_op
		WHERE 
		implement_id = #{implementId}
    </delete>
</mapper>
