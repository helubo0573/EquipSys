<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- store_goods_type表:库存物料类型表模块 -->
<mapper namespace="com.stone.equipsys.core.mapper.StoreGoodsTypeMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.stone.equipsys.core.domain.StoreGoodsType">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="type_name" property="typeName" jdbcType="VARCHAR" />
        <result column="quick_code" property="quickCode" jdbcType="VARCHAR" />
        <result column="type_order" property="typeOrder" jdbcType="INTEGER" />
        <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,type_name,quick_code,type_order,remarks 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="typeName != null and typeName != '' ">
                and type_name = #{typeName,jdbcType=VARCHAR}
            </if>
            <if test="quickCode != null and quickCode != '' ">
                and quick_code = #{quickCode,jdbcType=VARCHAR}
            </if>
            <if test="remarks != null and remarks != '' ">
                and remarks = #{remarks,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>

    <insert id="save" parameterType="com.stone.equipsys.core.domain.StoreGoodsType">
        insert into store_goods_type(type_name,quick_code,type_order,remarks)values(#{typeName,jdbcType=VARCHAR},#{quickCode,jdbcType=VARCHAR},#{typeOrder,jdbcType=INTEGER},#{remarks,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="com.stone.equipsys.core.domain.StoreGoodsType">
        update store_goods_type set 
            type_name = #{typeName,jdbcType=VARCHAR},
            quick_code = #{quickCode,jdbcType=VARCHAR},
            type_order = #{typeOrder,jdbcType=INTEGER},
            remarks = #{remarks,jdbcType=VARCHAR}
        where id = #{id ,jdbcType=INTEGER}
    </update>

    <update id="updateSelective"  parameterType="java.util.HashMap">
        update store_goods_type
          <set>
            <if test="typeName != null and typeName != '' ">        
                type_name = #{typeName,jdbcType=VARCHAR},                
            </if>
            <if test="quickCode != null and quickCode != '' ">        
                quick_code = #{quickCode,jdbcType=VARCHAR},                
            </if>
            <if test="typeOrder != null and typeOrder != '' ">        
                type_order = #{typeOrder,jdbcType=INTEGER},                
            </if>
            <if test="remarks != null and remarks != '' ">        
                remarks = #{remarks,jdbcType=VARCHAR}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>

    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from store_goods_type
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from store_goods_type
        <include refid="searchBy"/>
    </select>

    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from store_goods_type
        <include refid="searchBy"/>
    </select>
</mapper>
