<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- equip_mp表:设备基础信息表模块 -->
<mapper namespace="com.stone.equipsys.core.mapper.EquipMpMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.stone.equipsys.core.domain.EquipMp">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="equip_id" property="equipId" jdbcType="INTEGER" />
        <result column="mp_id" property="mpId" jdbcType="INTEGER" />
    </resultMap>
    
    <resultMap id="BaseExtResultMap" type="com.stone.equipsys.core.model.EquipMpModel">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="equip_id" property="equipId" jdbcType="INTEGER" />
        <result column="mp_id" property="mpId" jdbcType="INTEGER" />
        <result column="mp_name" property="mpname" jdbcType="VARCHAR"/>
    </resultMap>
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,equip_id,mp_id 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=INTEGER}
            </if>
            <if test="equipId != null and equipId != '' ">
                and equip_id = #{equipId,jdbcType=INTEGER}
            </if>
            <if test="mpId != null and mpId != '' ">
                and mp_id = #{mpId,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.stone.equipsys.core.domain.EquipMp">
        insert into equip_mp(equip_id,mp_id)values(#{equipId,jdbcType=INTEGER},#{mpId,jdbcType=INTEGER})
    </insert>

    
    <update id="update" parameterType="com.stone.equipsys.core.domain.EquipMp">
        update equip_mp set 
            equip_id = #{equipId,jdbcType=INTEGER},
            mp_id = #{mpId,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update equip_mp
          <set>
            <if test="equipId != null and equipId != '' ">        
                equip_id = #{equipId,jdbcType=INTEGER},                
            </if>
            <if test="mpId != null and mpId != '' ">        
                mp_id = #{mpId,jdbcType=INTEGER}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from equip_mp
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from equip_mp
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from equip_mp
        <include refid="searchBy"/>
    </select>
    
    <delete id="deleteMpByEquipId" parameterType="Integer">
    	delete 
    	from equip_mp
		WHERE 
		equip_id = #{equipId};
    </delete>
    
    <select id="getMpByEquipid" resultMap="BaseExtResultMap" parameterType="Integer">
    	 select
			mp.id as id,
			mp.equip_id as equip_id,
			mp.mp_id as mp_id,
			emp.emp_name as mp_name
		from
			equip_mp as mp
			left Join employee_info as emp ON mp.mp_id = emp.id
		where mp.equip_id=#{equipId};
    </select>
    
    <select id="countByEquipid" parameterType="java.lang.Long" resultType="java.lang.Integer">
    	select	count(id)
        from equip_mp
        where equip_id = #{equipId}
    </select>
</mapper>
