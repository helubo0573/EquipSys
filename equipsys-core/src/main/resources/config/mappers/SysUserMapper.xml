<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- sys_user表:系统用户表模块 -->
<mapper namespace="com.stone.equipsys.core.mapper.SysUserMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.stone.equipsys.core.domain.SysUser">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
        <result column="staus" property="staus" jdbcType="INTEGER" />
        <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="isadmin" property="isadmin" jdbcType="BOOLEAN" />
    </resultMap>
    
    <resultMap type="com.stone.equipsys.core.model.SysUserModel" id="ExtResultMap">
    	<id column="id" property="id" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
        <result column="employee_name" property="empname" jdbcType="VARCHAR" />
        <result column="staus" property="staus" jdbcType="INTEGER" />
        <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="isadmin" property="isadmin" jdbcType="BOOLEAN" />
        <result column="dept_name" property="deptname" jdbcType="VARCHAR" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,username,password,employee_id,staus,login_time,create_time,isadmin
    </sql>
     <!--扩充的sql查询字段 公共引用...-->
    <sql id="Ext_Column_List">
        user.id,user.username,user.password,user.employee_id,emp.emp_name as employee_name,user.staus,user.login_time,user.create_time,isadmin,dept.dept_name
    </sql>
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=INTEGER}
            </if>
            <if test="username != null and username != '' ">
                and username = #{username,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != '' ">
                and password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="employeeId != null and employeeId != '' ">
                and employee_id = #{employeeId,jdbcType=INTEGER}
            </if>
            <if test="staus != null and staus != '' ">
                and staus = #{staus,jdbcType=INTEGER}
            </if>
            <if test="loginTime != null">
                and login_time = #{loginTime,jdbcType=TIMESTAMP}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="isadmin != null and isadmin != '' ">
                and isadmin = #{isadmin,jdbcType=BOOLEAN}
            </if>
        </trim>
    </sql>
    <sql id="Ext_searchBy">
    	<trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                user.id  = #{id,jdbcType=INTEGER}
            </if>
            <if test="username != null and username != '' ">
                and user.username = #{username,jdbcType=VARCHAR}
            </if>
            <if test="lusername != null and lusername != '' ">
                and user.username like CONCAT("%",#{lusername,jdbcType=VARCHAR},"%")
            </if>
            <if test="lemployeeName != null and lemployeeName != '' ">
                and emp.employee_name like CONCAT("%",#{lemployeeName,jdbcType=VARCHAR},"%")
            </if>
            <if test="staus != null and staus != '' ">
                and user.staus = #{staus,jdbcType=INTEGER}
            </if>
            <if test="isadmin != null and isadmin != '' ">
                and isadmin = #{isadmin,jdbcType=BOOLEAN}
            </if>
        </trim>
    </sql>
    
    <insert id="save" parameterType="com.stone.equipsys.core.domain.SysUser" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into sys_user(username,password,employee_id,staus,login_time,create_time,isadmin)
        	values(#{username,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{employeeId,jdbcType=INTEGER},#{staus,jdbcType=INTEGER},#{loginTime,jdbcType=TIMESTAMP},#{createTime,jdbcType=TIMESTAMP},#{isadmin,jdbcType=BOOLEAN})
    </insert>

    
    <update id="update" parameterType="com.stone.equipsys.core.domain.SysUser">
        update sys_user set 
            username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            employee_id = #{employeeId,jdbcType=INTEGER},
            staus = #{staus,jdbcType=INTEGER},
            login_time = #{loginTime,jdbcType=TIMESTAMP},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            isadmin = #{isadmin,jdbcType=BOOLEAN}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update sys_user
          <set>
            <if test="username != null and username != '' ">        
                username = #{username,jdbcType=VARCHAR},                
            </if>
            <if test="password != null and password != '' ">        
                password = #{password,jdbcType=VARCHAR},                
            </if>
            <if test="employeeId != null and employeeId != '' ">        
                employee_id = #{employeeId,jdbcType=INTEGER},                
            </if>
            <if test="staus != null and staus != '' ">        
                staus = #{staus,jdbcType=INTEGER},                
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP}                
            </if>
            <if test="isadmin != null and isadmin != '' ">        
                isadmin = #{isadmin,jdbcType=BOOLEAN}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from sys_user
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from sys_user
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from sys_user
        <include refid="searchBy"/>
    </select>
    
        <select id="getUserByUserName" parameterType="String" resultMap="BaseResultMap">
    	select
    	<include refid="Base_Column_List" />
    	from sys_user
    	where
		username = #{username}
    </select>
    
    <select id="getUserByPhone" parameterType="String" resultMap="BaseResultMap">
    	select
    	<include refid="Base_Column_List" />
    	from sys_user
    	where
		mobile_number = #{phone}
    </select>
    
    <select id="countUserByUserName" parameterType="String" resultType="Integer">
    	select count(username)
    	from sys_user
    	where
		username = #{username}
    </select>
    
    <select id="countUserByPhone" parameterType="String" resultType="Integer">
    	select
    	count(mobile_number)
    	from sys_user
    	where
		mobile_number = #{phone}
    </select>
    
    <select id="isadmin" parameterType="String" resultType="Boolean">
		select is_admin
		from sys_user
		where username=#{username}	
	</select>
	
	<select id="getUserExtList" resultMap="ExtResultMap" parameterType="java.util.HashMap">
		SELECT
		<include refid="Ext_Column_List" />
		FROM sys_user as user left join employee_info as emp on user.employee_id=emp.id left join org_dept as dept on emp.emp_dept=dept.id
		<include refid="Ext_searchBy"/>
	</select>
	
	<select id="findUserExtById"  resultMap="ExtResultMap"  parameterType="java.lang.Long">
		SELECT
		<include refid="Ext_Column_List" />
		FROM sys_user as user left join employee_info as emp on user.employee_id=emp.id left join org_dept as dept on emp.emp_dept=dept.id
		WHERE user.id=#{id,jdbcType=INTEGER}
	</select>
    
	<delete id="deleteById"  parameterType="java.lang.Long">
		DELETE FROM sys_user WHERE id = #{userid,jdbcType=INTEGER}
	</delete>
</mapper>
